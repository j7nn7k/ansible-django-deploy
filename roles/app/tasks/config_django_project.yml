---
###
# Pulls the code from a remote Git repository, configures the web application,
# creates a virtualenv, and collects static assets
#

# - name: install known_hosts file to access GitHub
#   copy: src=ssh_conf/known_hosts dest={{ssh_dir}}/known_hosts

- name: add dir for deploy key
  file: dest=/home/.ssh/ state=directory

- name: upload deploy key
  copy: src=deploy_key dest=/home/.ssh/deploy_key

- name: checkout latest web app code
  git: repo={{ git_repo }} dest={{ app_checkout_path }} key_file=/home/.ssh/deploy_key accept_hostkey=yes

- name: check if virtualenv already exists
  stat: path={{ virtualenv_path }}
  register: venv_dir

- name: create virtualenv for Django application
  shell: virtualenv {{ virtualenv_path }}
  when: venv_dir.stat.isdir is not defined

- name: install django app dependencies listed in requirements.txt
  pip: requirements={{ requirements_file }} virtualenv={{ virtualenv_path }}

- name: Django collectstatic
  django_manage: >
    command=collectstatic
    app_path={{ manage_py_parent_dir }}
    virtualenv={{ virtualenv_path }}
    settings={{ settings_module }}
  environment: django_env_vars
  notify:
    - run gunicorn

# - name: Django syncdb
#   django_manage: command=syncdb
#                  app_path={{ manage_py_parent_dir }}
#                  virtualenv={{ virtualenv_path }}
#                  settings={{ settings_module }}
#   environment: django_env_vars
#   when: sync_db

# - name: Django migrate
#   django_manage: command=migrate
#                  app_path={{ manage_py_parent_dir }}
#                  virtualenv={{ virtualenv_path }}
#                  settings={{ settings_module }}
#   environment: django_env_vars
